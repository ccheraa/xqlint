<?xqlint
/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define(function(require, exports, module){
var XQueryParser = exports.XQueryParser = function XQueryParser(string, parsingEventHandler)
{
  init(string, parsingEventHandler);
?>

json     ::= value eof
object   ::= '{' ( pair ( ',' pair )* )? '}'
pair     ::= string ':' value
array    ::= '[' ( value ( ',' value )* )? ']'
value    ::= string
           | number
           | object
           | array
           | 'true'
           | 'false'
           | 'null'
whitespace
         ::= whitespace^token
          /* ws: definition */

<?TOKENS?>

eof      ::= $
string   ::= '"' ( anyUnicodeCharacterExceptQuoteOrBackslashOrControlCharacter | '\"' | '\\' | '\/' | '\b' | '\f' | '\n' | '\r' | '\t' | '\u' fourHexadecimalDigits )* '"'
anyUnicodeCharacterExceptQuoteOrBackslashOrControlCharacter
         ::= alphabet - ["#x005C]
alphabet ::= #x0009
           | #x000A
           | #x000D
           | [#x0020-#xD7FF]
           | [#xE000-#xFFFD]
           | [#x10000-#x10FFFF]
hexadecimalDigit
         ::= [0-9A-Fa-f]
fourHexadecimalDigits
         ::= hexadecimalDigit hexadecimalDigit hexadecimalDigit hexadecimalDigit
number   ::= '-'? ( '0' | digitOneThroughNine digit* ) ( '.' digit+ )? ( ( 'e' | 'E' ) ( '+' | '-' )? digit+ )?
digit    ::= [0-9]
digitOneThroughNine
         ::= digit - '0'
whitespace
         ::= [#x0009#x000A#x000D#x0020]+

<?ENCORE?>

<?xqlint
});
?>
